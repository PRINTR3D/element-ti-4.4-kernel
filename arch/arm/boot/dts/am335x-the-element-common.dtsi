/*
 * Copyright (C) 2012 Texas Instruments Incorporated - http://www.ti.com/
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */
#include <dt-bindings/interrupt-controller/irq.h>

/ {
	cpus {
		cpu@0 {
			cpu0-supply = <&dcdc2_reg>;
		};
	};

	memory {
		device_type = "memory";
		reg = <0x80000000 0x20000000>; /* 512 MB */
	};
	
	pwm_led {
		pinctrl-names = "default";
		pinctrl-0 = <&user_leds_s0>;
		compatible = "pwm-leds";
            
        led_red {
			label = "rgb:red";
			pwms = <&ehrpwm0 0 50000 0>;
			max-brightness = <255>;
			linux,default-trigger = "default-off";
			brightness = <0>;
		};
		led_green {
			label = "rgb:green";
			pwms = <&ehrpwm0 1 50000 0>;
			max-brightness = <255>;
			linux,default-trigger = "default-off";
			brightness = <0>;
		};
		led_blue {
			label = "rgb:blue";
			pwms = <&ehrpwm1 0 50000 0>;
			max-brightness = <255>;
			linux,default-trigger = "default-off";
			brightness = <0>;
		};
		led_act {
			label = "led:act";
			pwms = <&ehrpwm1 1 50000 0>;
			max-brightness = <255>;
			linux,default-trigger = "mmc0";
			brightness = <255>;
		};
	};

	vmmcsd_fixed: fixedregulator@0 {
		compatible = "regulator-fixed";
		regulator-name = "vmmcsd-fixed";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
	};
	
	wlan_en_reg: fixedregulator@1 {
		compatible = "regulator-fixed";
		regulator-name = "wlan-en-regulator";
		regulator-min-microvolt = <1800000>;
		regulator-max-microvolt = <1800000>;

		/* WLAN_EN GPIO for this board - Bank0, pin17 */
		gpio = <&gpio0 17 0>;

		/* WLAN card specific delay */
		startup-delay-us = <70000>;
		enable-active-high;
	};
};

&am33xx_pinmux {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&clkout2_pin &wlan_pins>;
	pinctrl-1 = <&clkout2_pin &wlan_pins_sleep>;

	user_leds_s0: user_leds_s0 {
		pinctrl-single,pins = <
			0x150 (PIN_OUTPUT_PULLDOWN | MUX_MODE3)	/* spi_sclk0.ehrpwm0a */
			0x154 (PIN_OUTPUT_PULLDOWN | MUX_MODE3)	/* spi_d0.ehrpwm0b */
			0x048 (PIN_OUTPUT_PULLUP | MUX_MODE6)	/* gpmc_a2.ehrpwm1a */
			0x04c (PIN_OUTPUT_PULLUP | MUX_MODE6)	/* gpmc_a3.ehrpwm1b */
		>;
	};

	i2c0_pins: pinmux_i2c0_pins {
		pinctrl-single,pins = <
			0x18c ( PIN_INPUT | MUX_MODE0 ) /* (C16) I2C0_SCL.I2C0_SCL */
			0x188 ( PIN_INPUT | MUX_MODE0 ) /* (C17) I2C0_SDA.I2C0_SDA */
		>;
	};

	i2c1_pins: pinmux_i2c1_pins {
		pinctrl-single,pins = <
			0x15c (PIN_INPUT| MUX_MODE2 ) 	/* (A16) spi0_cs0.I2C1_SCL */
			0x158 (PIN_INPUT | MUX_MODE2 )	/* (B16) spi0_d1.I2C1_SDA */
		>;
	};

	uart0_pins: pinmux_uart0_pins {
		pinctrl-single,pins = <
			0x170 (PIN_INPUT_PULLUP | MUX_MODE0)	/* (E15) uart0_rxd.uart0_rxd */
			0x174 (PIN_OUTPUT_PULLDOWN | MUX_MODE0)	/* (E16) uart0_txd.uart0_txd */
		>;
	};

	uart1_pins: pinmux_uart1_pins {
		pinctrl-single,pins = <
			0x180 (PIN_INPUT_PULLUP | MUX_MODE0) 	/* (D16) uart1_rxd.uart1_rxd */
			0x184 (PIN_OUTPUT_PULLDOWN | MUX_MODE0)	/* (D15) uart1_txd.uart1_txd */
		>;
	};

	clkout2_pin: pinmux_clkout2_pin {
		pinctrl-single,pins = <
			0x1b4 (PIN_OUTPUT_PULLDOWN | MUX_MODE3)	/* xdma_event_intr1.clkout2 */
		>;
	};

	wifi_sdio_pins: pinmux_wifi_sdio_pins {
		pinctrl-single,pins = <
			0x8c (PIN_INPUT_PULLUP | MUX_MODE3) /* gpmc_clk.mmc2_clk */
			0x88 (PIN_INPUT_PULLUP | MUX_MODE3) /* gpmc_csn3.mmc2_cmd */
			0x30 (PIN_INPUT_PULLUP | MUX_MODE3) /* gpmc_ad12.mmc2_dat0 */
			0x34 (PIN_INPUT_PULLUP | MUX_MODE3) /* gpmc_ad13.mmc2_dat1 */
			0x38 (PIN_INPUT_PULLUP | MUX_MODE3) /* gpmc_ad14.mmc2_dat2 */
			0x3c (PIN_INPUT_PULLUP | MUX_MODE3) /* gpmc_ad15.mmc2_dat3 */
		>;
	};
	
	wlan_pins: pinmux_wlan_pins {
		pinctrl-single,pins = <
			0x120 (PIN_OUTPUT_PULLDOWN | MUX_MODE7) /* gmii1_txd2.gpio0_17 WLAN_EN*/
			0x11c (PIN_INPUT_PULLUP | MUX_MODE7)    /* gmii1_txd3.gpio0_16 WLAN_IRQ */
		>;
	};

	wlan_pins_sleep: pinmux_wlan_pins_sleep {
		pinctrl-single,pins = <
			0x120 (PIN_OUTPUT_PULLUP | MUX_MODE7) /* gmii1_txd2.gpio0_17 WLAN_EN*/
			0x11c (PIN_INPUT_PULLUP | MUX_MODE7)  /* gmii1_txd3.gpio0_16 WLAN_IRQ */
		>;
	};
	
	emmc_pins: pinmux_emmc_pins {
		pinctrl-single,pins = <
			0x80 (PIN_INPUT_PULLUP | MUX_MODE2) /* gpmc_csn1.mmc1_clk */
			0x84 (PIN_INPUT_PULLUP | MUX_MODE2) /* gpmc_csn2.mmc1_cmd */
			0x00 (PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_ad0.mmc1_dat0 */
			0x04 (PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_ad1.mmc1_dat1 */
			0x08 (PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_ad2.mmc1_dat2 */
			0x0c (PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_ad3.mmc1_dat3 */
		>;
	};
};

/* PWM subsystem */
&epwmss0 {
	status = "okay";
};

&epwmss1 {
	status = "okay";
};

/* PWM driver in AM335x */
&ehrpwm0 {			
	status = "okay";			
};

&ehrpwm1 {			
	status = "okay";			
};

/* Uart for the serial console */
&uart0 {
	pinctrl-names = "default";
	pinctrl-0 = <&uart0_pins>;
	status = "okay";
};

/* UART on the bottom connector */
&uart1 {
	pinctrl-names = "default";
	pinctrl-0 = <&uart1_pins>;
	status = "okay";
};

&usb {
	status = "okay";
};

&usb_ctrl_mod {
	status = "okay";
};

&usb0_phy {
	status = "okay";
};

&usb1_phy {
	status = "okay";
};

&usb0 {
	status = "okay";
	dr_mode = "peripheral";
};

&usb1 {
	status = "okay";
	dr_mode = "host";
};

&cppi41dma  {
	status = "okay";
};


/* I2C for the PMIC */
&i2c0 {
	pinctrl-names = "default";
	pinctrl-0 = <&i2c0_pins>;
	clock-frequency = <400000>;
	status = "okay";

	tps: tps@24 {
		reg = <0x24>;
	};

};

/include/ "tps65217.dtsi"

/* I2C on the bottom connector */
&i2c1 {
	pinctrl-names = "default";
	pinctrl-0 = <&i2c1_pins>;
	clock-frequency = <400000>;
	status = "okay";
};

&tps {
	ti,pmic-shutdown-controller;

	interrupt-parent = <&intc>;
	interrupts = <7>;	/* NNMI */

	regulators {
		dcdc1_reg: regulator@0 {
			regulator-always-on;
		};

		dcdc2_reg: regulator@1 {
			/* VDD_MPU voltage limits 0.95V - 1.325V with +/-4% tolerance */
			regulator-name = "vdd_mpu";
			regulator-min-microvolt = <912500>;
			regulator-max-microvolt = <1378000>;
			regulator-boot-on;
			regulator-always-on;
		};

		dcdc3_reg: regulator@2 {
			/* VDD_CORE voltage limits 0.95V - 1.1V with +/-4% tolerance */
			regulator-name = "vdd_core";
			regulator-min-microvolt = <925000>;
			regulator-max-microvolt = <1150000>;
			regulator-boot-on;
			regulator-always-on;
		};

		ldo1_reg: regulator@3 {
			regulator-name = "vio,vrtc,vdds";
			regulator-always-on;
		};

		ldo2_reg: regulator@4 {
			regulator-name = "vdd_3v3aux";
			regulator-always-on;
		};

		ldo3_reg: regulator@5 {
			regulator-name = "vdd_1v8";
			regulator-always-on;
		};

		ldo4_reg: regulator@6 {
			regulator-name = "vdd_3v3a";
			regulator-always-on;
		};

	};
};

&ldo3_reg {
	regulator-min-microvolt = <1800000>;
	regulator-max-microvolt = <1800000>;
	regulator-always-on;
};

&mmc2 {
	vmmc-supply = <&vmmcsd_fixed>;
	pinctrl-names = "default";
	pinctrl-0 = <&emmc_pins>;
	bus-width = <4>;
	ti,non-removable;
	keep-power-in-suspend;
	status = "okay";
};

&mmc3 {
	status = "okay";
	vmmc-supply = <&wlan_en_reg>;
	bus-width = <4>;
	pinctrl-names = "default";
	pinctrl-0 = <&wifi_sdio_pins>;
	ti,non-removable;
	ti,needs-special-hs-handling;
	cap-power-off-card;
	keep-power-in-suspend;
	
	/* these are on the crossbar and are outlined in the
	   xbar-event-map element */
	dmas = <&edma_xbar 12 0 1
		    &edma_xbar 13 0 2>;
	dma-names = "tx", "rx";
	   
	#address-cells = <1>;
	#size-cells = <0>;
	wlcore: wlcore@0 {
		compatible = "ti,wl1805";
		reg = <2>;
		interrupt-parent = <&gpio0>;
		interrupts = <16 IRQ_TYPE_LEVEL_HIGH>;
	};
};

&aes {
	status = "okay";
};

&sham {
	status = "okay";
};

&wkup_m3_ipc {
	ti,scale-data-fw = "am335x-bone-scale-data.bin";
};

&rtc {
	system-power-controller;
};
